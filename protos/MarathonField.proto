#VRML_SIM R2023b utf8
# license: Apache License 2.0
# license url: http://www.apache.org/licenses/LICENSE-2.0
# Field for Marathon competition.

EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023b/projects/appearances/protos/Plastic.proto"
EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023b/projects/appearances/protos/Grass.proto"
EXTERNPROTO "https://raw.githubusercontent.com/cyberbotics/webots/R2023b/projects/appearances/protos/CarpetFibers.proto"

PROTO MarathonField [
  field SFVec3f                     translation 0 0 0
  field SFRotation                  rotation    0 1 0 0
  field SFString                    name        "marathon_field"
  field SFBool                      turfPhysics FALSE
]
{

  %{
    A = 3.0
    B = 1.0
    C = 1.0
    D = 1.0
    I = 0


    if fields.turfPhysics.value then
      DEPTH = 0.01
    else
      DEPTH = 0
    end
    -- Points for a quarter field (except central circle)
    pts = {}

    pts[1] = {x = 0,          y = 0,      z = DEPTH}
    pts[2] = {x = 32,         y = 0,      z = DEPTH}
    pts[3] = {x = 0,          y = 25,     z = DEPTH}
    pts[4] = {x = 32,         y = 25,     z = DEPTH}


    -- Triangles for Grass
    tg = {}
    tg[1] = {a = 2, b = 1, c = 3}
    tg[2] = {a = 4, b = 2, c = 3}

    -- Offset to have origin on the center of the field
    OFFSET_X = 0
    OFFSET_Y = 0
    Npts = table.maxn(pts)
    for i = 1, Npts do
      pts[i].x = pts[i].x - OFFSET_X
      pts[i].y = pts[i].y - OFFSET_Y
    end

  }%

  Solid {
    translation IS translation
    rotation IS rotation
    locked TRUE
    children [
      %{ if fields.turfPhysics.value then }%
      DEF BLADES Solid {
        contactMaterial "grass"
        translation 0 0 0.01
        rotation 1 0 0 0
        boundingObject Plane {
          size %{= 2 * I + A }% %{= 2 * I + B }%
        }
      }
      %{ end }%
      DEF GRASS Shape {
        appearance DEF GREEN_APPEARANCE CarpetFibers {
          colorOverride    0 1 0
          type             "synthetic"
          textureTransform TextureTransform {
            scale %{= 2 * A }% %{= 2 * A }%
          }
          IBLStrength      1.0
        }
        geometry IndexedFaceSet {
          coord Coordinate {
            point [
             %{ for k, v in pairs(pts) do }%
                %{= v.x }% %{= v.y }% %{= v.z }%
             %{ end }%
            ]
          }
          ccw FALSE
          coordIndex [ # v.X - 1 because coordIndex starts at 0, while the points (defined in Lua) start at 1
            %{ for k, v in pairs(tg) do }%
               %{= v.a - 1 }% %{= v.b - 1 }% %{= v.c - 1 }% -1,
            %{ end }%
          ]
        }
      }
    ]
    boundingObject Transform {
      rotation 1 0 0 0
      translation 1 0 0
      children [
        Shape {
          geometry Plane {
            size %{= 2 * (A + 2 * C) }% %{= 2 * (A + 2 * C) }%
          }
        }
      ]
    }
  }
}